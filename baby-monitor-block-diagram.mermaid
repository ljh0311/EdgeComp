flowchart TB
    %% Main System Layers
    subgraph InputLayer["Input Layer"]
        Camera["Camera Module\n(camera.py)"]
        Audio["Audio Module\n(audio_processor.py)"]
        
        subgraph CameraComponents["Camera Components"]
            CamWin["DirectShow\n(Windows)"]
            CamPi["V4L2\n(Raspberry Pi)"]
        end
        
        subgraph AudioComponents["Audio Components"]
            AudioCapture["Real-time Audio\nCapture"]
            AudioProcess["Audio Processing"]
        end
        
        Camera --- CameraComponents
        Audio --- AudioComponents
    end
    
    subgraph ProcessingLayer["Processing Layer"]
        PersonDetect["Person Detection\n(person_detector.py)"]
        EmotionRecog["Emotion Recognition\n(emotion_recognizer.py)"]
        AudioClass["Audio Classification"]
        
        subgraph DetectionModels["Detection Models"]
            YOLO["YOLOv8 Nano Model"]
        end
        
        subgraph EmotionModels["Emotion Models"]
            Wav2Vec["Wav2Vec2-based Model"]
        end
        
        subgraph AudioModels["Audio Classification"]
            SoundDetect["Sound Type Detection\n(cry, laugh, etc.)"]
        end
        
        PersonDetect --- DetectionModels
        EmotionRecog --- EmotionModels
        AudioClass --- AudioModels
    end
    
    subgraph CommLayer["Communication Layer"]
        WebApp["Web Application\n(web_app.py)"]
        
        subgraph WebComponents["Web Components"]
            Flask["Flask Backend"]
            SocketIO["Socket.IO Real-time\nCommunication"]
            EventHandler["Event Handling\nSystem"]
        end
        
        WebApp --- WebComponents
    end
    
    subgraph InterfaceLayer["Interface Layer"]
        WebInterface["Web Interface\n(index.html)"]
        
        subgraph UIComponents["UI Components"]
            VideoFeed["Real-time\nVideo Feed"]
            StatusMonitor["Status\nMonitoring"]
            AlertSystem["Alert\nSystem"]
            AudioVis["Audio\nVisualization"]
        end
        
        WebInterface --- UIComponents
    end
    
    %% Connections between layers
    InputLayer --> ProcessingLayer
    ProcessingLayer --> CommLayer
    CommLayer --> InterfaceLayer
    
    %% Hardware Components
    subgraph Hardware["Hardware Components"]
        RaspberryPi["Raspberry Pi 400/\nWindows PC"]
        CameraHW["Camera"]
        MicrophoneHW["Microphone"]
        PowerSupply["Power Supply"]
        Storage["Storage (SD Card)"]
        Casing["Protective Casing"]
    end
    
    %% Connect hardware to software layers
    Hardware -.-> InputLayer
    
    %% User/Parent device
    User["User Device\n(Any browser)"] <--> InterfaceLayer
    
    classDef layerStyle fill:#e0f7fa,stroke:#01579b,stroke-width:2px
    classDef componentStyle fill:#bbdefb,stroke:#0d47a1,stroke-width:1px
    classDef hardwareStyle fill:#fff9c4,stroke:#f57f17,stroke-width:1px
    classDef userStyle fill:#e8f5e9,stroke:#2e7d32,stroke-width:1px
    
    class InputLayer,ProcessingLayer,CommLayer,InterfaceLayer layerStyle
    class CameraComponents,AudioComponents,DetectionModels,EmotionModels,AudioModels,WebComponents,UIComponents componentStyle
    class Hardware,RaspberryPi,CameraHW,MicrophoneHW,PowerSupply,Storage,Casing hardwareStyle
    class User userStyle
